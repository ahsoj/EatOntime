# Generated by Django 4.2.1 on 2023-06-15 07:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="GlobalUser",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        db_index=True,
                        max_length=255,
                        unique=True,
                        verbose_name="Email Address",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("createdAt", models.DateTimeField(auto_now_add=True)),
                ("updatedAt", models.DateTimeField(auto_now=True)),
                ("role", models.CharField(max_length=10)),
                ("is_active", models.BooleanField(default=True)),
                ("is_superuser", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Addresses",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("street_l1", models.CharField(max_length=100, null=True)),
                ("street_l2", models.CharField(max_length=100, null=True)),
                ("city", models.CharField(max_length=50, null=True)),
                ("state", models.CharField(max_length=30, null=True)),
                ("zip_code", models.CharField(max_length=10, null=True)),
                ("country", models.CharField(max_length=255, null=True)),
                ("latitude", models.FloatField(null=True)),
                ("longitude", models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="MenuItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("item_name", models.CharField(max_length=100)),
                ("item_descriptions", models.TextField(max_length=500)),
                ("item_picture", models.ImageField(null=True, upload_to="menuItem/")),
                ("current_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("active", models.BooleanField(default=True)),
                ("ingredients", models.TextField()),
                (
                    "rating",
                    models.DecimalField(decimal_places=1, default=0.0, max_digits=4),
                ),
                ("category", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("order_date", models.DateTimeField(auto_now_add=True)),
                ("order_code", models.IntegerField(editable=False, unique=True)),
                (
                    "delivery_charge",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                ("status", models.CharField(default="PENDING", max_length=20)),
                ("payment_status", models.BooleanField(default=False)),
                ("total_cost", models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "globaluser_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "profilePic",
                    models.ImageField(blank=True, null=True, upload_to="profile/"),
                ),
                (
                    "address",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="systemapi.addresses",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("systemapi.globaluser",),
        ),
        migrations.CreateModel(
            name="PasswordResetToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.CharField(max_length=50)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Restaurants",
            fields=[
                (
                    "globaluser_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("merchant_name", models.CharField(max_length=50)),
                ("m_restaurant_name", models.CharField(max_length=50)),
                (
                    "m_restaurant_logo",
                    models.ImageField(null=True, upload_to="merchant/logo/"),
                ),
                (
                    "business_permit",
                    models.ImageField(null=True, upload_to="merchant/permit/"),
                ),
                ("is_verified", models.BooleanField(default=False)),
                (
                    "address",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="systemapi.addresses",
                    ),
                ),
            ],
            bases=("systemapi.globaluser",),
        ),
        migrations.CreateModel(
            name="RestaurantMenu",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("date", models.DateField()),
                ("openDay_of_week", models.CharField(max_length=50)),
                ("menu_items", models.ManyToManyField(to="systemapi.menuitem")),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="systemapi.restaurants",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("payment_method", models.CharField(max_length=50)),
                ("transaction_id", models.CharField(max_length=50)),
                ("date", models.DateTimeField(auto_now_add=True)),
                (
                    "order_process",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="systemapi.order",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="systemapi.customer",
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="systemapi.restaurants",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("quantity", models.IntegerField()),
                ("delivered", models.BooleanField(default=False)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "menu_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="systemapi.menuitem",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="systemapi.order",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["order"], name="systemapi_o_order_i_5adb68_idx"
                    ),
                    models.Index(
                        fields=["menu_item"], name="systemapi_o_menu_it_e66602_idx"
                    ),
                ],
            },
        ),
        migrations.AddField(
            model_name="order",
            name="customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="systemapi.customer"
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="restaurant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="systemapi.restaurants"
            ),
        ),
        migrations.CreateModel(
            name="Offers",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("reason", models.TextField(blank=True, null=True)),
                ("date_activate_from", models.DateTimeField()),
                ("date_activate_to", models.DateTimeField()),
                (
                    "discount_percentage",
                    models.DecimalField(decimal_places=2, default=0.05, max_digits=5),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="systemapi.restaurants",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="menuitem",
            name="restaurant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="systemapi.restaurants"
            ),
        ),
        migrations.CreateModel(
            name="Feedback",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("caption", models.TextField(blank=True, null=True)),
                ("rating", models.FloatField(blank=True, max_length=2, null=True)),
                ("createdAt", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="systemapi.customer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Favorite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("createdAt", models.DateTimeField(auto_now_add=True, null=True)),
                ("items", models.ManyToManyField(to="systemapi.menuitem")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="systemapi.customer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DeliveringDriver",
            fields=[
                (
                    "globaluser_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "profilePic",
                    models.ImageField(blank=True, null=True, upload_to="profile/"),
                ),
                ("driverLicense", models.ImageField(upload_to="dirver_license/")),
                (
                    "address",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="systemapi.addresses",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("systemapi.globaluser",),
        ),
        migrations.AddField(
            model_name="addresses",
            name="customer_address",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="systemapi.customer",
            ),
        ),
        migrations.AddField(
            model_name="addresses",
            name="drivers_address",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="systemapi.deliveringdriver",
            ),
        ),
        migrations.AddField(
            model_name="addresses",
            name="merchant_address",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="merchant_ad",
                to="systemapi.restaurants",
            ),
        ),
        migrations.AddIndex(
            model_name="globaluser",
            index=models.Index(
                fields=["role", "email", "phone_number"],
                name="systemapi_g_role_cb1c9b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="restaurants",
            index=models.Index(
                fields=["m_restaurant_name"], name="systemapi_r_m_resta_7327f5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="restaurantmenu",
            index=models.Index(
                fields=["restaurant"], name="systemapi_r_restaur_004d4a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["order_process"], name="systemapi_p_order_p_afde09_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="menuitem",
            index=models.Index(
                fields=["restaurant", "item_name"],
                name="systemapi_m_restaur_337dd2_idx",
            ),
        ),
    ]
